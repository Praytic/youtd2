name: build-and-publish

on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:    
      - main
    # Sequence of patterns matched against refs/tags
    tags:        
      - v*

jobs:
  export_game:
    runs-on: macos-latest
    name: export game
    steps:
    - name: checkout
      uses: actions/checkout@v3.0.2
      with:
        fetch-depth: 0

    - name: generate version for the build
      id: generate_version
      run: |
        latest_tag=$(git describe --abbrev=0 --tags)
        short_hash=$(git rev-parse --short HEAD)
        echo "TAG_VERSION: ${latest_tag}-${short_hash}"
        echo "COMMIT_REF: $GITHUB_REF_NAME"
        echo "TAG_VERSION=${latest_tag}-${short_hash}" >> $GITHUB_ENV
        echo "COMMIT_REF=$GITHUB_REF_NAME" >> $GITHUB_OUTPUT

    - name: release requested check
      run: |
        if [[ ${{ steps.generate_version.outputs.COMMIT_REF }} =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]] ; then
            echo "COMMIT_REF=${{ steps.generate_version.outputs.COMMIT_REF }}" >> "$GITHUB_ENV"
            echo "NEED=true" >> "$GITHUB_ENV"
            echo 'true'
        else
            echo "NEED=false" >> "$GITHUB_ENV"
            echo 'false'
        fi

    - name: update project.godot with new version
      run: |
        project_godot_file="${{ github.workspace }}/project.godot"
        sed -i '' 's/\(config\/version="\).*\("\)/\1'"${TAG_VERSION}"'\2/' "${project_godot_file}"
        echo "New project.godot contents:"
        cat ${{ github.workspace }}/project.godot

    - name: use custom editor settings
      run: |
        mkdir -p .config/godot
        cp ${{ github.workspace }}/.github/workflows/editor_settings-4.tres .config/godot/

    - name: install wine
      id: wine_install
      run: |
        brew tap homebrew/cask-versions
        brew install --cask --no-quarantine wine-stable
        echo "WINE_PATH=$(which wine64)" >> $GITHUB_OUTPUT
    
    - name: export game
      id: export
      uses: firebelley/godot-export@v5.0.0
      with:
        godot_executable_download_url: https://github.com/godotengine/godot/releases/download/4.0.2-stable/Godot_v4.0.2-stable_macos.universal.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot/releases/download/4.0.2-stable/Godot_v4.0.2-stable_export_templates.tpz
        relative_project_path: ./
        verbose: true
        export_debug: false
        archive_output: true
        wine_path: ${{ steps.wine_install.outputs.WINE_PATH }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: repack web artifact
      run: |
        zip -uj ${{ steps.export.outputs.archive_directory }}/web.zip ${{ github.workspace }}/Build/Web/*
        cp ${{ github.workspace }}/Build/Web/* ${{ steps.export.outputs.build_directory }}/web/

    - uses: actions/upload-artifact@v3
      with:
        name: youtd-${{ env.TAG_VERSION }}
        path: ${{ steps.export.outputs.archive_directory }}/*.zip
        if-no-files-found: error

    - name: deploy to github pages
      if: steps.export.outcome == 'success'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ${{ steps.export.outputs.build_directory }}/web

    outputs:
      tag_version: ${{ env.TAG_VERSION }}
      commit_ref: ${{ env.COMMIT_REF }}
      release_flag: ${{ env.NEED }}

  upload_artifacts:
    needs: export_game
    strategy:
      matrix:
        platform: [windows, macos, web, linux]
    runs-on: ubuntu-latest
    steps:
    - name: download exported files
      uses: actions/download-artifact@v3
      with:
        name: youtd-${{ needs.export_game.outputs.tag_version }}
        path: exported_files

    - name: rename artifacts
      id: rename_artifacts
      run: |
        VERSION_TAG="${{ needs.export_game.outputs.tag_version }}"
        mv "exported_files/${{ matrix.platform }}.zip" "exported_files/${{ matrix.platform }}-$VERSION_TAG.zip"
        echo "${{ matrix.platform }}=exported_files/$platform-$VERSION_TAG.zip" >> $GITHUB_OUTPUT

    - name: upload artifacts
      id: upload_artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform }}-${{ needs.export_game.outputs.tag_version }}
        path: exported_files/${{ matrix.platform }}-${{ needs.export_game.outputs.tag_version }}.zip

    outputs:
      macos_artifact: ${{ steps.rename_artifacts.outputs.macos_artifact }}
      linux_artifact: ${{ steps.rename_artifacts.outputs.linux_artifact }}
      web_artifact: ${{ steps.rename_artifacts.outputs.web_artifact }}
      windows_artifact: ${{ steps.rename_artifacts.outputs.windows_artifact }}

  create_release:
      name: create release
      needs: [upload_artifacts, export_game]
      if: needs.export_game.outputs.release_flag == 'true'
      runs-on: ubuntu-latest
      steps:
        - name: show props
          run: |
            echo "Commit ref: $GITHUB_REF_NAME"
            echo "Release tag: ${{ needs.export_game.outputs.commit_ref }}"
        
        - uses: geekyeggo/delete-artifact@v2
          with:
            name: youtd-${{ needs.export_game.outputs.tag_version }}

        - name: download artifacts
          uses: actions/download-artifact@v3
          with:
            path: .
            
        - name: display structure of downloaded files
          run: ls -R
          working-directory: .

        - name: release client
          uses: ncipollo/release-action@v1.11.2
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            tag: ${{ needs.export_game.outputs.commit_ref }}
            generateReleaseNotes: true
            artifacts: ./**/*
